<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lz.manage.mapper.StaticsMapper">

    <select id="loginCount" resultType="java.lang.Long">
        select count(*)
        from sys_logininfor
    </select>
    <select id="userCount" resultType="java.lang.Long">
        select count(*)
        from sys_user
    </select>
    <select id="loginCountDay" resultType="com.lz.manage.model.statics.ro.StaticRo">
        WITH RECURSIVE date_range AS (SELECT CURDATE() AS login_date
                                      UNION ALL
                                      SELECT login_date - INTERVAL 1 DAY
        FROM date_range
        WHERE login_date > CURDATE() - INTERVAL #{day} DAY)
        SELECT dr.login_date                     as name,
               COALESCE(COUNT(lf.login_time), 0) AS total
        FROM date_range dr
                 LEFT JOIN
             sys_logininfor lf ON DATE (lf.login_time) = dr.login_date
        GROUP BY dr.login_date
        ORDER BY dr.login_date ASC;
    </select>
    <select id="userSexPie" resultType="com.lz.manage.model.statics.ro.StaticRo">
        SELECT CASE
                   WHEN sex = '0' THEN '男'
                   WHEN sex = '1' THEN '女'
                   ELSE '未知'
                   END  AS name,
               COUNT(*) AS total
        FROM sys_user
        GROUP BY name
        ORDER BY FIELD(name, '男', '女', '未知');
    </select>
    <select id="userAge" resultType="com.lz.manage.model.statics.ro.StaticRo">
        SELECT CASE
                   WHEN age BETWEEN 0 AND 10 THEN '0-10'
                   WHEN age BETWEEN 11 AND 20 THEN '10-20'
                   WHEN age BETWEEN 21 AND 30 THEN '20-30'
                   WHEN age BETWEEN 31 AND 40 THEN '30-40'
                   WHEN age BETWEEN 41 AND 50 THEN '40-50'
                   WHEN age BETWEEN 51 AND 60 THEN '50-60'
                   WHEN age BETWEEN 61 AND 70 THEN '60-70'
                   WHEN age BETWEEN 71 AND 80 THEN '70-80'
                   WHEN age BETWEEN 81 AND 90 THEN '80-90'
                   WHEN age > 90 THEN '90+'
                   ELSE '未知'
                   END  AS name,
               COUNT(*) AS total
        FROM sys_user
        GROUP BY name
        ORDER BY FIELD(name, '0-10', '10-20', '20-30', '30-40', '40-50', '50-60', '60-70', '70-80', '80-90', '90+',
                       '未知');
    </select>
</mapper>